version: 0.2
phases:
	install:
	    runtime-versions:
		php: 8.0.2
	pre_build: # commands to be run before build
	  commands:
      - echo -n "$CODEBUILD_BUILD_ID" | sed "s/.*:\([[:xdigit:]]\{7\}\).*/\1/" > /tmp/build_id.out
      - printf "%s:%s" "$REPOSITORY_URI" "$(cat /tmp/build_id.out)" > /tmp/build_tag.out
      - ##printf '{"tag":"%s"}' "$(cat /tmp/build_id.out)" > imagedefinitions.json
      - printf '[{"name":"tbapp","imageUri":"%s"}]' "$(cat /tmp/build_tag.out)" > imagedefinitions.json
      - echo Logging in to Amazon ECR....
      - aws --version
      # login to Elastic container registry, make sure you specify the region
      - eval $(aws ecr get-login --region us-east-2 --no-include-email | sed 's|https://||')
      - REPOSITORY_URI= 201892630853.dkr.ecr.us-east-2.amazonaws.com/tokobangunan
      #Specify the image tag
      - IMAGE_TAG=1.0
	build:
	  commands:
      - echo Build started on `date`
      - echo installing composer..
      - composer install
      - echo creating .env file..
      - cp .env.example .env
      - echo generating app key
      - php artisan key:generate
      - php artisan cache:clear
      - php artisan config:clear
      - php artisan migrate --force
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
	post_build:
	  commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker image ls -a
      - docker push $REPOSITORY_URI:$IMAGE_TAG

artifacts:
  files:
    - imagedefinitions.json
